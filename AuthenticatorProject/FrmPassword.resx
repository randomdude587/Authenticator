<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>